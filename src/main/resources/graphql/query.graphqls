
type Person {
  firstName: String,
  lastName: String,
  mailAdresses: String,
  birthDate: String,
  profile: Profile,
  skillVOList: [Skill],
  interviews: [Interview],
  projects: [Project],
  courses: [Course],
  reviews: [Review]
}

type Course {
   courseTypeTitle: String,
   trainerEmail: String,
   title: String,
   description: String,
   startDate: String,
   endDate: String,
   reviews: [Review]
}

type CourseType {
   typeTitle: String
}

type Trainer {
  name: String,
  address: String,
  phone: String,
  email: String
}

type Intern {
  emailPerson: String
}

type Review {
  courseTitle: String,
  internEmail: String,
  createdOn: String,
  score: String
}

type Interview {
  interviewTitle: String,
  interviewDescription: String,
  interviewDate: String
}
type Project {
   projectTitle: String,
   projectDescription: String
 }
type Skill {
  libelle: String,
  description: String,
  typeSkills: TypeSkills
}
type TypeSkills {
  titleSkill: String
}
type Profile {
  profileTitle: String,
  profileDescription: String,
  countPerson: Int
}
type Question {
  questionText: String
}
type Choice {
  choiceText :  String,
  percentage : Int,
  question : Question
}
type Answer {
  choice :  Choice,
  person : Person
}
type Query {
  listPerson:[Person],
  personByEmail(email: String): Person,
  listQuestion:[Question],
  listChoice:[Choice],
  listAnswer:[Answer],
  listCourses: [Course],
  listTrainers: [Trainer],
  listReviews: [Review],
  listCourseTypes: [CourseType]
}
type Mutation {
  createPerson(firstName: String, lastName: String, mailAdresses: String, birthDate: String, profile: String):Person
}