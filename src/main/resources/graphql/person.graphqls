
type Person {
  firstName: String,
  lastName: String,
  mailAdresses: String,
  birthDate: String,
  profile: Profile,
  skillVOList: [Skill]
  interviews: [Interview]
  projects: [Project]
}
type Interview {
  interviewTitle: String,
  interviewDescription: String,
  interviewDate: String
}
type Project {
   projectTitle: String,
   projectDescription: String
 }
type Skill {
  libelle: String,
  description: String,
  typeSkills: TypeSkills
}
type TypeSkills {
  titleSkill: String
}
type Profile {
  profileTitle: String,
  profileDescription: String,
  countPerson: Int
}
type Question {
  questionText: String
}
type Query {
listPerson:[Person],
personByEmail(email: String): Person,
listQuestion:[Question]
}
type Mutation {
createPerson(firstName: String, lastName: String, mailAdresses: String, birthDate: String, profile: String):Person
}